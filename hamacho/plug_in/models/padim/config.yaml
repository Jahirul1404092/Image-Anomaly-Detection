dataset:
  name: mvtec #options: [mvtec, btech, folder]
  format: mvtec
  path: ./datasets/MVTec
  category: bottle
  task: segmentation
  image_size: 256
  train_batch_size: 32
  test_batch_size: 32
  num_workers: 0 # 36
  normal_dir: null
  abnormal_dir: null
  normal_test_dir: null
  transform_config:
    train: null
    val: null
  create_validation_set: false
  tiling:
    apply: false
    tile_size: null
    stride: null
    remove_border_count: 0
    use_random_tiling: False
    random_tile_count: 16

model:
  name: padim
  backbone: resnet18
  layers:
    - layer1
    - layer2
    - layer3
  weight_file: weights/trained_data.hmc
  normalization_method: min_max # options: [none, min_max, cdf]

metrics:
  image:
    - F1Score
    - AUROC
    - BinaryRecall
    - BinaryAccuracy
    - BinaryPrecision
  pixel:
    - F1Score
    - AUROC
    - BinaryRecall
    - BinaryAccuracy
    - BinaryPrecision
  threshold:
    image_norm: 0.5 # must be within 0 and 1
    pixel_norm: 0.5 # must be within 0 and 1
    image_default: 3
    pixel_default: 3
    adaptive: true

project:
  seed: 42
  path: ./results
  test_dir_name: test_predictions
  inference_dir_name: inference_results
  log_images_to: ["local"]
  logger: false # options: [tensorboard, csv] or combinations.
  save_outputs:
    test:
      image:
        segmentation:
          - input_image
          - histogram
          - ground_truth_mask
          - predicted_heat_map
          - grayscale
          - predicted_mask
          - segmentation_result
        classification:
          - input_image
          - histogram
          - prediction
      csv:
        - anomaly_map
        - metrics
    inference:
      image:
        segmentation:
          - input_image
          - histogram
          - ground_truth_mask
          - predicted_heat_map
          - grayscale
          - predicted_mask
          - segmentation_result
        classification:
          - input_image
          - histogram
          - prediction
      csv:
        - anomaly_map
        - metrics
    save_combined_result_as_image: true
    add_label_on_image: true

optimization:
  openvino:
    apply: false

# PL Trainer Args. Don't add extra parameter here.
trainer:
  accelerator: auto # <"cpu", "gpu", "tpu", "ipu", "hpu", "auto">
  accumulate_grad_batches: 1
  amp_backend: native
  auto_lr_find: false
  auto_scale_batch_size: false
  auto_select_gpus: false
  benchmark: false
  check_val_every_n_epoch: 1 # Don't validate before extracting features.
  default_root_dir: null
  detect_anomaly: false
  deterministic: false
  devices: 1
  enable_checkpointing: false
  enable_model_summary: true
  enable_progress_bar: true
  fast_dev_run: false
  gpus: null # Set automatically
  gradient_clip_val: 0
  ipus: null
  limit_predict_batches: 1.0
  limit_test_batches: 1.0
  limit_train_batches: 1.0
  limit_val_batches: 1.0
  log_every_n_steps: 50
  max_epochs: 1
  max_steps: -1
  max_time: null
  min_epochs: null
  min_steps: null
  move_metrics_to_cpu: false
  multiple_trainloader_mode: max_size_cycle
  num_nodes: 1
  num_processes: null
  num_sanity_val_steps: 0
  overfit_batches: 0.0
  plugins: null
  precision: 32
  profiler: null
  reload_dataloaders_every_n_epochs: 0
  replace_sampler_ddp: true
  sync_batchnorm: false
  tpu_cores: null
  track_grad_norm: -1
  val_check_interval: 1.0 # Don't validate before extracting features.
